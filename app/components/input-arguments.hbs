<h1>Special Input Component Arguments</h1>
<p>These are ember-specific component arguments that you can pass into Input, using the syntax <code>@actionName</code> (camelCased). If the action fires, you'll see it logged to the console.
</p>

{{!-- <Input @eventName={{this.someAction}}/> --}}

<h2>Angle Brackets</h2>
Syntax: Input @eventName=[[this.someAction]]

<ul>
  <li>
    <label for="enter" class="broken">@enter (doesn't work)</label>
    <Input @enter={{this.updateName}} id="enter"/>
    
  </li>
  <li>
    <label for="insert-newline-input">@insertNewline input</label>
    <Input @insertNewline={{this.updateName}} id="insert-newline-input" />
    *fires for input, but should it???
  </li>
  <li>
    <label for="insert-newline-textarea">@insertNewline textarea</label>
    <Textarea @insertNewline={{this.updateName}} id="insert-newline-textarea" />
  </li>
  <li>
    <label for="escape-press" class="broken">@escapePress (doesn't work)</label>
    <Input @escapePress={{this.updateName}} id="escape-press"/>
  </li>
  <li>
    <label for="focus-in">@focusIn</label>
    <Input @focusIn={{this.updateName}} id="focus-in"/>
  </li>
  <li>
    <label for="focus-out">@focusOut</label>
    <Input @focusOut={{this.updateName}} id="focus-out"/>
  </li>
  <li>
    <label for="key-press">@keyPress</label>
    <Input @keyPress={{this.updateName}} id="key-press"/>
  </li>
  <li>
    <label for="key-up">@keyUp</label>
    <Input @keyUp={{this.updateName}} id="key-up" />
  </li>
</ul>

<h2>Curly Braces</h2>

Syntax: [[input enter=this.updateName]]

<ul>
  <li>
    <label for="curly-enter" class="broken">@enter (doesn't work)</label>
    {{input enter=this.updateName id="curly-enter"}}
  </li>
  <li>
    <label for="curly-insert-newline-input">insertNewline input</label>
    {{input insertNewline=this.updateName id="curly-insert-newline-input" }}
    *fires for input, but should it???
  </li>
  <li>
    <label for="curly-insert-newline-textarea">insertNewline textarea</label>
    {{textarea insertNewline=this.updateName id="curly-insert-newline-textarea" }}
  </li>
  <li>
    <label for="curly-escape-press" class="broken">escapePress (doesn't work)</label>
    {{input escapePress=this.updateName id="curly-escape-press"}}
  </li>
  <li>
    <label for="curly-focus-in">focusIn</label>
    {{input focusIn=this.updateName id="curly-focus-in"}}
  </li>
  <li>
    <label for="curly-focus-out">focusOut</label>
    {{input focusOut=this.updateName id="curly-focus-out"}}
  </li>
  <li>
    <label for="curly-key-press">keyPress</label>
    {{input keyPress=this.updateName id="curly-key-press"}}
  </li>
  <li>
    <label for="curly-key-up">keyUp</label>
    {{input keyUp=this.updateName id="curly-key-up" }}
  </li>
</ul>

<h2>Curly with action helper</h2>

Syntax: [[input enter=(action "updateName")]]

<ul>
  <li>
    <label for="curly-action-enter">@enter</label>
    {{input enter=(action "updateName") id="curly-action-enter"}}
    *This works now!
  </li>
  <li>
    <label for="curly-action-insert-newline-input">insertNewline input</label>
    {{input insertNewline=(action "updateName") id="curly-action-insert-newline-input" }}
    *fires for input, but should it???
  </li>
  <li>
    <label for="curly-action-insert-newline-textarea">insertNewline textarea</label>
    {{textarea insertNewline=(action "updateName") id="curly-action-insert-newline-textarea" }}
  </li>
  <li>
    <label for="curly-action-escape-press" class="broken">escapePress (doesn't work)</label>
    {{input escapePress=(action "updateName") id="curly-action-escape-press"}}
  </li>
  <li>
    <label for="curly-action-focus-in">focusIn</label>
    {{input focusIn=(action "updateName") id="curly-action-focus-in"}}
  </li>
  <li>
    <label for="curly-action-focus-out">focusOut</label>
    {{input focusOut=(action "updateName") id="curly-action-focus-out"}}
  </li>
  <li>
    <label for="curly-action-key-press">keyPress</label>
    {{input keyPress=(action "updateName") id="curly-action-key-press"}}
  </li>
  <li>
    <label for="curly-action-key-up">keyUp</label>
    {{input keyUp=(action "updateName") id="curly-action-key-up" }}
  </li>
</ul>

<h2>Using events in form elements</h2>

Wrapping the special arguments in a form does not have any impact.

<form>
    <label for="form-enter" class="broken">enter</label>
    <Input @enter={{this.updateName}} id="form-enter"/>
    <br>
    <label for="form-escape-press" class="broken">escapePress</label>
    <Input @escapePress={{this.updateName}} id="form-escape-press"/>
</form>
